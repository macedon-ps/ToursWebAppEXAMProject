@model SearchProductViewModel
@{
    ViewData["Title"] = "Search Page";

    string ParseListOfStringsToString(List<string> allItemsListOfString)
	{
		var allItemsOneString = "";
		allItemsOneString = String.Join(",", allItemsListOfString);

		return allItemsOneString;
	}
}

<div class="searchPage">
    <div class="searchButton">
        <button class="">
            <a class="" asp-area="" asp-controller="Search" asp-action="">Резерв</a>
        </button>
        <button class="">
            <a class="" asp-area="" asp-controller="Search" asp-action="" asp-route-id="">Резерв 2</a>
        </button>
        <button class="">
            <a class="" asp-area="" asp-controller="Search" asp-action="">Резерв 3</a>
        </button>
        <button class="">
            <a class="" asp-area="" asp-controller="Search" asp-action="TechTaskSearch">ТЗ для Search</a>
        </button>
    </div>
    <div class="searchHeader">
        <h1>Поиск туристических продуктов:</h1>
        <br/>
        <div class="searchMenu">  

            <form asp-controller="Search" asp-action="Index" method="post" name="myForm">
                
                @*свойства, кот. передаются в  строковом виде или с приведением к строке*@
                <input type="hidden" asp-for="CountryId" value="@Model.CountryId" />
                <input type="hidden" asp-for="CountryNameSelected" value="@Model.CountryNameSelected" />
                <input type="hidden" asp-for="CityNameSelected" value="@Model.CityNameSelected" />
                <input type="hidden" asp-for="CountryDescription" value="@Model.CountryDescription" />
                <input type="hidden" asp-for="CityDescrition" value="@Model.CityDescrition" />
                <input type="hidden" asp-for="LocalDescrition" value="@Model.LocalDescrition" />
                @*свойства, кот. предварительно преобразуются в строки*@
                <input type="hidden"  name="CountriesOneStringFormValue" value="@ParseListOfStringsToString(Model.Countries)" />
                <input type="hidden"  name="CitiesOneStringFormValue" value="@ParseListOfStringsToString(Model.Cities)" />

                @* Первый блок элементов: 
                    3 select (список стран, количество дней отдыха, количество отдыхающих), 
                    календарь и кнопка "Найти тур" *@

                <div class="flexRow searchBlock1">   
                    
                    @*Список стран (выпадающий список, единственный выбор)
                        По выбранной стране будет выводиться список городов этой страны*@
                    <div class="flexColumn blockWidth20">
                        <div>
                            <label asp-for="CountryNameSelected"></label>
                            <select asp-for="CountryNameSelected" 
                                asp-items="@Model.CountriesList" name="countriesSelect">
                            </select>
                        </div>
                        <div id="countriesSelectDiv" class="flexColumn blockWidth20"></div>
                    </div>
                    
                    @*Даты поездки (выпадающий календарь, по интервалу "от" и "до") *@
                    @{
                        // TODO: доработать выпадающий календарь, чтобы м.б. выбирать интервал "от" и "до"
                    }
                    <div class="flexColumn blockWidth20">
                        <label asp-for="DaysInterval"></label>
                        <input asp-for="DaysInterval" />
                    </div>
                    
                    @*Количество дней отдыха (выпадающий список, единственный выбор, + свой выбор)*@
                    <div class="flexColumn blockWidth20">
                        <label asp-for="NumberOfDaysFromSelectList"></label>
                        <select asp-for="NumberOfDaysFromSelectList" 
                            asp-items="@Html.GetEnumSelectList<NumberOfDaysEnum>()">
                        </select>
                    </div>
                
                    @*Количество взрослых и детей (выпадающий список, единственный выбор, + свой набор)*@
                    <div class="flexColumn blockWidth20">
                        <label asp-for="NumberOfPeopleFromSelectList"></label>
                        <select asp-for="NumberOfPeopleFromSelectList" 
                            asp-items="@Html.GetEnumSelectList<NumberOfPeopleEnum>()">
                        </select>
                    </div>
                    
                    @*Кнопка "Найти тур"*@
                    <div class="flexColumn blockWidth20">
                        <input type="submit" value="Найти тур" />
                    </div>
                </div> 

                @* Второй блок элементов: 
                    1 select (список городов), карта и блоки описаний о странах, городах, достопримечательностъ
                *@

                <div class="flexRow searchBlock2">   
                    @*Список городов (выпадающий список, множественный выбор)
                      Список городов выводится по выбранной стране*@
                    <div class="flexColumn blockWidth20">
                        <div>
                            <label asp-for="CityNameSelected"></label>
                            <select  asp-for="CityNameSelected" 
                                asp-items="@Model.CitiesList" name="citiesSelect">
                            </select>
                        </div>    
                        <div id="citiesSelectDiv" class="flexColumn blockWidth20"></div>    
                    </div>
                        
                    @*Карта страны / Фото страны, городов, достопримечательностей (одна картинка / фото)*@
                    <div class="flexColumn blockWidth60">
                        <label asp-for="MapImagePath"></label>
                        <img src="@Model.MapImagePath" alt="Карта страны / Фото страны, городов, достопримечательностей"/>
                    </div>

                    @*Описание страны, городов, достопримечательностей (1 - страны, 2 - города, 3 - достопримечательности)*@
                    <div class="flexColumn blockWidth20">
                        <label asp-for="CountryDescription"></label>
                        <p>@Model.CountryDescription</p>
                        <label asp-for="CityDescrition"></label>
                        <p>@Model.CityDescrition</p>
                        <label asp-for="LocalDescrition"></label>
                        <p>@Model.LocalDescrition</p>
                    </div>
                </div>

                @* Блок данных информационного характера, на пермод разработки
                   В дальнейшем, будет убран из проекта
                *@
                @*
                <div class="flexColumn searchBlock2">
                    <p>Полные данные вью модели:</p><br />
                    <p>Model.CountryId / Id страны: @Model.CountryId</p>
                    <p>Model.CountryNameSelected / Страна: @Model.CountryNameSelected</p>
                    <p>Model.CountryDescription / Описание страны: @Model.CountryDescription </p>
                    <p>Model.CountriesList / Список стран:</p>
                        @foreach(var country in Model.CountriesList){
                            <p>Страна: @country.Text value: @country.Value isSelected: @country.Selected</p>
                        }
                    <br />
                                                  
                    <p>Model.CityNameSelect / Город: @Model.CityNameSelected</p>
                    <p>Model.CityDescrition / Описание города: @Model.CityDescrition </p>
                    <p>Model.LocalDescrition / Описание достопримечательности: @Model.LocalDescrition</p>
                    <p>Model.CitiesList / Список городов: </p>
                    
                    @foreach(var city in Model.CitiesList)
                    {
                        <p>Город: @city.Text value: @city.Value isSelected: @city.Selected</p>
                    }
                    <br />

                    <p>Model.DaysInterval / Даты: @Model.DaysInterval</p>
                    <p>Model.NumberOfDaysFromSelectList / Количество дней:  @Model.NumberOfDaysFromSelectList </p>
                    <p>Model.NumberOfPeopleFromSelectLi / Количество людей: @Model.NumberOfPeopleFromSelectList</p><br />
                         
                    <p>Model.MapImagePath / Карта: @Model.MapImagePath</p>
                    <p>Model.PicturesImagePath / Картинки: @Model.PicturesImagePath</p>
                </div>*@
            </form>
        </div>
     </div>
</div>
<script>
    /* 
    // Черновик. Скрипт по изменению данных 2-х Html-элементов Select 
    // (список стран в БД и список городов для выбранной страны из БД) 
    // по событию изменения значения первого Select (список стран). 
    // Пока все на стороне клиента (в браузере)


    // находим select эдементы - список стран и список городов
    var countriesList = document.getElementsByName('countriesSelect')[0];
    var citiesList = document.getElementsByName('citiesSelect')[0];

    // находим div's, в кот. будем выводить информацию о выбранных странах и городах // только на стадии разработки
    var countriesSelectDivBlock = document.getElementById('countriesSelectDiv');
    var citiesSelectDivBlock = document.getElementById('citiesSelectDiv');

    // первоначальные значения text для Div's 
    countriesSelectDivBlock.textContent = "Ни одна страна не выбрана";
    citiesSelectDivBlock.textContent = "Ни один город не выбран";

    // чтобы получить выбранную страну, обратимся к select списку стран как к элементу формы
    // найдем значение выбранной страны как value у элемента формы, т.е. elementList[i].value
    var elementList = document.myForm.elements;
    var elementCountryList = elementList.countriesSelect;
	var elementCityList = elementList.citiesSelect;
    
	var selectCountryName = "";
	var selectCityName = "";

    // изменение информации о выбранной стране
    // изменение выбранного города и информации о нем
    // на событие изменения списка стран подписываем функцию изменения выбранного города, исходя из того, какая страна выбрана
    countriesList.addEventListener("change", changeCountry);

    function changeCountry() {
       
        //for (var i = 0; i < elementList.length; i++) {
        //     if (elementList[i].name === "countriesSelect") {
        //        selectCountryName = elementList[i].value;
        //        continue;
        //    }
        //}

        selectCountryName = elementCountryList.value;

        if (selectCountryName !== null) {
            countriesSelectDivBlock.textContent = "Сейчас выбрана страна: " + selectCountryName;
        }

        changeCity(selectCountryName);
				
		if (selectCityName !== null) {
            citiesSelectDivBlock.textContent = "Сейчас выбран город: " + selectCityName;
        } 
    }

    @{
    // TODO: создать алгоритм поиска списка городов для выбранной страны (в браузере, на стороне клиента)
    // черновой вариант:
    }
    function changeCity(selectCountryName) { 
        switch(selectCountryName){
			case "Украина":
			selectCityName = "Киев";
			break;
			case "Франция":
			selectCityName = "Париж";
			break;
			case "Италия":
			selectCityName = "Рим";
			break;
			case "Испания":
			selectCityName = "Мадрид";
			break;
			case "Defoult":
			selectCityName = "Какой то город по умолчанию";
			break;
		}
        elementCityList.value = selectCityName;
    }
    */
</script>
